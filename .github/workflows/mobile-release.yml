name: Android
on:
  push:
    branches: [ test ]

  workflow_dispatch:
jobs:
  Mobile:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        config:
          - {update: true}
    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Setup Haxe
        uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.3.6

      - name: Restore Previous Cache
        id: cache-debug-build-android-restore
        uses: actions/cache/restore@main
        with:
          path: |
            /home/runner/haxelib/
            export/release/android/haxe/
            export/release/android/obj/
          key: cache-build-test

      - name: Setup Haxelib
        run: haxelib setup ~/haxelib

      - name: Update Libraries
        if: matrix.config.update
        run: |
          yes | haxelib git lime https://github.com/mcagabe19-stuff/lime --quiet
          haxelib install openfl
          yes | haxelib git hxcpp https://github.com/mcagabe19-stuff/hxcpp --quiet
          haxelib install flixel
          haxelib install flixel-addons
          haxelib install flixel-ui

      - name: Configure Android
        run: |
          haxelib run lime config ANDROID_SDK $ANDROID_HOME
          haxelib run lime config ANDROID_NDK_ROOT $ANDROID_NDK_LATEST_HOME
          haxelib run lime config JAVA_HOME $JAVA_HOME_17_X64
          haxelib run lime config ANDROID_SETUP true

      - name: Compile
        run: haxelib run lime build android

      - name: Clear Previous Cache
        uses: actions/github-script@main
        with:
          script: |
            try {
            	const caches = await github.rest.actions.getActionsCacheList({
            		owner: context.repo.owner,
            		repo: context.repo.repo,
            	})
            	if (typeof caches.data.actions_caches != null && caches.data.actions_caches.length > 0) {
            		for (const cache of caches.data.actions_caches) {
            			if (cache.key == "cache-build-test") {
            				console.log('Clearing ' + cache.key + '...')
            				await github.rest.actions.deleteActionsCacheById({
            					owner: context.repo.owner,
            					repo: context.repo.repo,
            					cache_id: cache.id,
            				})
            				console.log("Previous Cache Cleared!")
            			}
            		}
            	}
            } catch (error) {
            	console.log(error.message);
            }

      - name: Save Current Cache
        id: cache-release-build-android-save
        uses: actions/cache/save@main
        with:
          path: |
            /home/runner/haxelib/
            export/release/android/haxe/
            export/release/android/obj/
          key: cache-build-test

      - name: Upload Artifact
        uses: actions/upload-artifact@main
        with:
          name: Test
          path: export/release/android/bin/app/build/outputs/apk/release
          if-no-files-found: error
